// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimuladorExitoAPI.Models;

#nullable disable

namespace SimuladorExitoAPI.Migrations
{
    [DbContext(typeof(SimuladorDbContext))]
    [Migration("20240426025627_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimuladorExitoAPI.Models.Career", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Career", (string)null);
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Faculty", (string)null);
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CareerId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Cycle")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ElapsedYears")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Time")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("Milestone", (string)null);
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.MilestonePosition", b =>
                {
                    b.Property<int>("MilestoneId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("MilestoneId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("MilestonePositions");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.MilestonePostgraduate", b =>
                {
                    b.Property<int>("MilestoneId")
                        .HasColumnType("int");

                    b.Property<int>("PostgraduateId")
                        .HasColumnType("int");

                    b.HasKey("MilestoneId", "PostgraduateId");

                    b.HasIndex("PostgraduateId");

                    b.ToTable("MilestonePostgraduates");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("EstimatedRemuneration")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("InfoSource")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PossibleWorkplaces")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("CarrerId");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Postgraduate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CareerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostLevel")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("Postgraduate", (string)null);
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Career", b =>
                {
                    b.HasOne("SimuladorExitoAPI.Models.Faculty", "Faculty")
                        .WithMany("Careers")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Milestone", b =>
                {
                    b.HasOne("SimuladorExitoAPI.Models.Career", "Career")
                        .WithMany("Milestones")
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.MilestonePosition", b =>
                {
                    b.HasOne("SimuladorExitoAPI.Models.Milestone", "Milestone")
                        .WithMany()
                        .HasForeignKey("MilestoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SimuladorExitoAPI.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Milestone");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.MilestonePostgraduate", b =>
                {
                    b.HasOne("SimuladorExitoAPI.Models.Milestone", "Milestone")
                        .WithMany()
                        .HasForeignKey("MilestoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SimuladorExitoAPI.Models.Postgraduate", "Postgraduate")
                        .WithMany()
                        .HasForeignKey("PostgraduateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Milestone");

                    b.Navigation("Postgraduate");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Position", b =>
                {
                    b.HasOne("SimuladorExitoAPI.Models.Career", "Carrer")
                        .WithMany("Positions")
                        .HasForeignKey("CarrerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrer");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Postgraduate", b =>
                {
                    b.HasOne("SimuladorExitoAPI.Models.Career", "Career")
                        .WithMany("Postgraduates")
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Career", b =>
                {
                    b.Navigation("Milestones");

                    b.Navigation("Positions");

                    b.Navigation("Postgraduates");
                });

            modelBuilder.Entity("SimuladorExitoAPI.Models.Faculty", b =>
                {
                    b.Navigation("Careers");
                });
#pragma warning restore 612, 618
        }
    }
}
